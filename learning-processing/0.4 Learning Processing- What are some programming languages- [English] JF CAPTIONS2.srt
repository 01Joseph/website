1
00:00:02,399 --> 00:00:03,500
We're very close now.

2
00:00:03,005 --> 00:00:07,050
We're just a few videos away from actually
opening up a Processing window and typing

3
00:00:07,095 --> 00:00:07,178
in some lines of

4
00:00:08,078 --> 00:00:11,267
code, running our code and having our first
computer program.

5
00:00:11,969 --> 00:00:16,660
But I think before we do that I want
to talk about something which is -

6
00:00:16,066 --> 00:00:19,080
okay - let's just say -

7
00:00:19,008 --> 00:00:22,099
It's Time to Learn Programming, then the
big question arrives

8
00:00:23,071 --> 00:00:27,143
What programming language should I Learn?
What's my project? What am i doing? What's

9
00:00:28,043 --> 00:00:30,107
the right environment? What's the right
language? And this -

10
00:00:31,007 --> 00:00:34,019
this is a question that loaded with

11
00:00:34,019 --> 00:00:39,208
anxiety and confusion and, "Oh! What if I'm
learning the wrong thing?" and "Shouldn't I

12
00:00:39,379 --> 00:00:41,140
be really learning this?" and I

13
00:00:41,014 --> 00:00:44,032
first I just want to say a general
comment first before we

14
00:00:44,032 --> 00:00:48,107
to take a programming languages. There is no
perfect programming language. There is no

15
00:00:49,007 --> 00:00:52,156
perfect programming environment that
will do everything you always wanted it to

16
00:00:52,219 --> 00:00:55,255
do is perfect and exactly right for the
particular project you're making

17
00:00:55,579 --> 00:01:00,607
and often the answer to that question is,
you know,

18
00:01:00,859 --> 00:01:02,934
the answer to the question "what programming
language should use?" its the one that

19
00:01:03,609 --> 00:01:04,500
you just sorta

20
00:01:04,005 --> 00:01:07,664
feel comfortable with how it looks good
kinda like you're happy to get started

21
00:01:08,159 --> 00:01:08,670
and

22
00:01:08,067 --> 00:01:12,078
the one that you're using right now.
Better to be writing code and making

23
00:01:12,078 --> 00:01:12,707
something

24
00:01:13,409 --> 00:01:16,820
then to be spending all day worrying
about trying to find that perfect

25
00:01:16,082 --> 00:01:17,061
language so

26
00:01:17,799 --> 00:01:21,210
in a sense, one answer is, "Pick something
get started."

27
00:01:21,021 --> 00:01:24,090
You can learn this language and try this
one later and another one later

28
00:01:24,009 --> 00:01:27,101
it doesn't really matter. But for us we
have to come to a decision and in many

29
00:01:28,082 --> 00:01:28,451
ways

30
00:01:29,189 --> 00:01:32,220
I'm picking a programming language
and environment

31
00:01:32,022 --> 00:01:35,075
which is one that I'm comfortable with.
It's one that I work on. It's one that I've

32
00:01:35,075 --> 00:01:37,092
known for many years. I's not perfect.

33
00:01:37,092 --> 00:01:40,140
- and so that's what you will be learning.
And and hopefully

34
00:01:41,004 --> 00:01:44,017
you will find other languages
and environments in your life

35
00:01:44,053 --> 00:01:47,054
and this will have helped to you to that end.

36
00:01:47,063 --> 00:01:50,114
So let's just - first though - okay so let's think
about what are -

37
00:01:51,014 --> 00:01:54,133
what's the kind of map

38
00:01:54,259 --> 00:01:58,770
of programming languages that are out
there and what what are the sort of pros

39
00:01:58,077 --> 00:02:04,135
and cons advantages and disadvantages
using different languages

40
00:02:05,035 --> 00:02:07,042
Hello! Okay! So one thing we can look at

41
00:02:08,005 --> 00:02:12,024
(I'll provide a link to this) this is a nice
little chart called, "The History of Programming

42
00:02:12,069 --> 00:02:13,640
Languages," I think it's available from

43
00:02:13,064 --> 00:02:16,080
O'Reilly, and we can first at least see like
back here

44
00:02:16,008 --> 00:02:19,094
in 1954 the invention of Fortran

45
00:02:20,066 --> 00:02:23,115
a which you can see right here we can
start to kind of like scroll around this

46
00:02:24,015 --> 00:02:25,214
thing, we can see that there are

47
00:02:25,349 --> 00:02:28,366
zillions of languages and they have
various relationships and they all have funny

48
00:02:28,519 --> 00:02:29,563
names like Oberon

49
00:02:29,959 --> 00:02:34,940
AINSI C and Ada and all sorts of other stuff.
The other thing I should point out about this nice

50
00:02:34,094 --> 00:02:35,116
little graph/chart

51
00:02:36,016 --> 00:02:39,375
is that ends in 2004 so

52
00:02:39,519 --> 00:02:42,810
a lot has happened by the way the last
ten years nine or ten years

53
00:02:42,081 --> 00:02:45,083
there's a lot of other languages a lot
of other innovations on this chart if

54
00:02:45,083 --> 00:02:46,086
you were to continue it

55
00:02:46,086 --> 00:02:49,545
would get even bigger and crazier but
you know just looking at you realize

56
00:02:50,319 --> 00:02:50,560
like

57
00:02:50,056 --> 00:02:53,069
oh, my goodness, it's totally overwhelming

58
00:02:53,069 --> 00:02:56,618
look how many language there are. We
could also kind of go to Wikipedia there's

59
00:02:57,239 --> 00:02:57,940
a nice

60
00:02:57,094 --> 00:03:00,165
"Comparison of Programming Languages" page
and you can scroll down and see like

61
00:03:01,065 --> 00:03:04,126
look at all these possible languages. There
are zillions of them. So

62
00:03:05,026 --> 00:03:09,026
I think we can kind of make our own
little list, just to kind of -

63
00:03:09,026 --> 00:03:12,375
you know you've probably heard -
this would be the moment where I'd say, "Hey,

64
00:03:12,609 --> 00:03:16,690
everyone out there, the three are you
watching this video,

65
00:03:16,069 --> 00:03:19,151
raise your raise your hand and shout out a
programming language that you've heard of,"

66
00:03:20,051 --> 00:03:24,090
and you might say, "Pascal!"

67
00:03:24,009 --> 00:03:27,028
(probably none of you has heard of Pascal) but -

68
00:03:28,009 --> 00:03:34,054
Pascal - (Ooh, boy this doesn't work)

69
00:03:34,054 --> 00:03:38,283
Pascal. There we go. You might say
C. You might say Java.

70
00:03:38,769 --> 00:03:42,470
You might even say something like, "Oh,
what this thing, 'Assembly Language' or

71
00:03:42,047 --> 00:03:43,086
'Machine Language?'"

72
00:03:43,086 --> 00:03:47,075
I'll write Assembly Language down here.

73
00:03:47,849 --> 00:03:51,870
And you might say, "Oh, what about ActionScript?"

74
00:03:51,087 --> 00:03:54,346
And you might even learn something -

75
00:03:55,129 --> 00:03:57,226
have heard of something - probably you haven't, but
the first programming - one of then first

76
00:03:58,099 --> 00:03:59,680
programming languages I learned actually

77
00:03:59,068 --> 00:04:03,100
was "Lingo," which was the programming
language of Macromedia's Director which I

78
00:04:04,000 --> 00:04:04,709
believe

79
00:04:04,709 --> 00:04:07,734
still exists? Anyway

80
00:04:07,959 --> 00:04:10,650
so we could start making this list, and I
kinda started doing this I think I

81
00:04:10,065 --> 00:04:11,904
probably put Pascal in the wrong place but

82
00:04:12,489 --> 00:04:15,557
what I've - one of the things i wanna talk
about with this kinda list a programming

83
00:04:16,169 --> 00:04:17,226
languages and what you might pick -

84
00:04:17,739 --> 00:04:22,100
and I'm gonna say say C++ / Objective-c

85
00:04:22,001 --> 00:04:25,084
is this idea of low level

86
00:04:25,093 --> 00:04:30,191
versus high level

87
00:04:31,091 --> 00:04:35,175
and this is kinda lowel-level
[corrects spelling error] low-level

88
00:04:36,075 --> 00:04:39,100
high-level this is an important concept
that comes up in

89
00:04:40,000 --> 00:04:43,013
thinking about programming languages,
right? So

90
00:04:43,013 --> 00:04:48,019
essentially let's say you want to write
the lowest level possible code,

91
00:04:48,019 --> 00:04:52,019
that you were completely insane
person who wanted to just like

92
00:04:52,019 --> 00:04:55,020
torture yourself for eternity, you would

93
00:04:55,002 --> 00:04:58,221
you would say I'm only going to write my
computer program as a sequence

94
00:04:58,419 --> 00:05:01,590
zeros and ones, right? Because ultimately

95
00:05:01,059 --> 00:05:04,156
so here's mine - you know this -

96
00:05:05,056 --> 00:05:09,102
execute this code - it's amazing - it's
beautiful. Here this is my program,

97
00:05:10,002 --> 00:05:13,015
right? (and I guess you can see it because I
wrote off the edge of the screen)

98
00:05:13,015 --> 00:05:17,074
but let's just say this is your
program - what am I talking about?

99
00:05:17,074 --> 00:05:21,140
Okay, this is like the lowest -
essentially everything that executes on

100
00:05:22,004 --> 00:05:24,010
your computer - all data - is stored -

101
00:05:24,046 --> 00:05:27,049
all instructions are stored as a
sequence zeros and ones.

102
00:05:27,049 --> 00:05:30,072
But this is unrealistic. How could you
possibly

103
00:05:30,072 --> 00:05:33,080
really be expected to write software

104
00:05:33,008 --> 00:05:37,127
just as a series of 0's and 1's? So
there's generally a process where

105
00:05:37,919 --> 00:05:41,260
you want to be able to write your code in
a higher level way

106
00:05:41,026 --> 00:05:44,995
the ultimate like - if I'm creating a
graphics application, which is what we're

107
00:05:45,229 --> 00:05:46,270
going to be doing,

108
00:05:46,027 --> 00:05:49,078
a really high level programs might
say - might be written something like this

109
00:05:49,078 --> 00:05:53,105
draw a red square - draw a square on the
screen that's like medium size and red

110
00:05:54,005 --> 00:05:54,049
colored

111
00:05:54,049 --> 00:05:58,056
and draw circle that's really big and blue.
That's very high level. It

112
00:05:58,056 --> 00:06:01,065
really is like English and what happens
is

113
00:06:01,065 --> 00:06:05,084
there's a compiler will take that
high-level

114
00:06:05,084 --> 00:06:09,146
code and translate it into machine
language.

115
00:06:10,046 --> 00:06:14,255
So assembly language is kinda want to
the lowest level programming languages

116
00:06:14,669 --> 00:06:14,766
that people use.

117
00:06:15,639 --> 00:06:20,360
When C came around, C was often
refered to in

118
00:06:20,036 --> 00:06:23,465
this kind of like oxymoron type way a
a

119
00:06:23,789 --> 00:06:27,802
high-level low-level language meaning it's
high-level

120
00:06:27,919 --> 00:06:31,020
in that you're writing code that starts to
have higher-level,

121
00:06:31,002 --> 00:06:36,026
more English-like constructs, but it still
allows you the low-level access to the

122
00:06:36,026 --> 00:06:36,102
computer -

123
00:06:37,002 --> 00:06:41,271
direct access to the computer's memory - lots
of stuff that you can do it makes it

124
00:06:41,289 --> 00:06:41,377
very very very - you can

125
00:06:42,169 --> 00:06:46,247
execute very very fast. So anyway that's just
kind of an important concept to realize

126
00:06:46,949 --> 00:06:49,930
most of ther languages that I haven't
kind of written up here

127
00:06:49,093 --> 00:06:53,108
which I'll kind of like add over here
like - that you may have heard of- like Ruby,

128
00:06:54,008 --> 00:06:58,009
JavaScript, Python,

129
00:06:58,018 --> 00:07:01,043
and we could keep going here, we could write lot others

130
00:07:01,043 --> 00:07:04,088
these are all generally high-level
programming languages.

131
00:07:04,088 --> 00:07:07,092
Now there's another kind interesting
little component that I think that I'll

132
00:07:08,028 --> 00:07:08,099
mention

133
00:07:08,099 --> 00:07:11,175
which is this idea of a language that's
'compiled'

134
00:07:12,075 --> 00:07:16,614
versus 'interpreted' - now in many ways I almost
want to stop myself and not talk about this

135
00:07:17,289 --> 00:07:21,510
because - we don't really - these are some
details that when we're first learning to

136
00:07:21,051 --> 00:07:21,680
program

137
00:07:22,139 --> 00:07:25,840
we're gonna put aside. We just want to write
the code run it and make stuff happen

138
00:07:25,084 --> 00:07:27,183
but it's something to think about as you
start getting to this larger world

139
00:07:28,083 --> 00:07:29,292
of programming languages.

140
00:07:30,039 --> 00:07:33,660
So let's say you're writing a program in C,
right? You

141
00:07:33,066 --> 00:07:36,066
write out the text-based instructions

142
00:07:36,066 --> 00:07:40,077
in your high-level language. That program
gets compiled

143
00:07:40,077 --> 00:07:43,149
down into the sort of lowest level program
which is

144
00:07:44,049 --> 00:07:47,100
like one level below Assembly Language, which is
Machine Language

145
00:07:48,000 --> 00:07:52,419
the zeros and ones. Then it can be run.
This is great;

146
00:07:52,419 --> 00:07:55,431
it makes it run it makes run very very
very fast

147
00:07:55,539 --> 00:07:56,670
but it is -

148
00:07:56,067 --> 00:08:00,080
- is different that some languages that we
have now that are interpreted,

149
00:08:00,008 --> 00:08:03,023
JavaScript being one of those.

150
00:08:03,095 --> 00:08:06,096
A language which is interpreted is
actually -

151
00:08:07,005 --> 00:08:11,009
while the program is running - it is
reading your code line by line and

152
00:08:11,009 --> 00:08:14,032
executing the program. This allows for
things like

153
00:08:14,032 --> 00:08:18,087
live coding, right? If a program is
actually reading the code as it's running

154
00:08:18,087 --> 00:08:18,092
you could

155
00:08:19,037 --> 00:08:22,093
change the code as it's running and the
program would change in real time

156
00:08:22,093 --> 00:08:26,097
which cannot happen in a compiled language
because you've got to write your code,

157
00:08:26,097 --> 00:08:29,133
compile, then run it. So I the reason why
mention this

158
00:08:30,033 --> 00:08:33,040
is we're using - we are going to use Processing

159
00:08:33,004 --> 00:08:36,022
(am I recording? Yes?)

160
00:08:36,058 --> 00:08:39,077
We're going to use Processing
which

161
00:08:39,599 --> 00:08:42,631
is, and our code is actually going to be
compiled before it's run

162
00:08:42,919 --> 00:08:46,180
which is something we'll see as we start to
first write our programs.

163
00:08:46,018 --> 00:08:49,072
Another topic that I want to bring up is
this idea of

164
00:08:49,072 --> 00:08:53,073
'client-side' versus 'server-side'
programming. This is an important

165
00:08:53,073 --> 00:08:54,085
question because

166
00:08:54,085 --> 00:08:57,131
you know you you might have project
ideas in your head

167
00:08:58,031 --> 00:09:02,034
things that you want to make and one
thing might be, "I had this idea for this

168
00:09:02,061 --> 00:09:03,137
kinda interactive

169
00:09:04,037 --> 00:09:07,039
exhibit about dinosaurs for a science
museum."

170
00:09:07,057 --> 00:09:10,075
In that sense you might be building a
client-side

171
00:09:10,075 --> 00:09:13,121
application a desktop application that's
gonna run maybe it reads some

172
00:09:14,021 --> 00:09:17,054
pixels from a camera so the user can
interact with in a draw some

173
00:09:17,054 --> 00:09:20,068
dinosaur footprints to the screen or
something like that.

174
00:09:20,068 --> 00:09:24,074
You might also have an idea for, "Oh, I have this
website I want to make

175
00:09:24,074 --> 00:09:27,119
where the user enters all this
information about - personal information

176
00:09:28,019 --> 00:09:28,106
about themselves -

177
00:09:29,006 --> 00:09:32,017
and it gives them back their horoscope." so

178
00:09:32,017 --> 00:09:36,051
these are different applications and
require a different set of programming

179
00:09:36,051 --> 00:09:37,080
languages for them,

180
00:09:37,008 --> 00:09:40,009
and one thing that we can see here
i mean all

181
00:09:40,081 --> 00:09:45,099
this idea of anytime you go to a web
page - if this is my web browser -

182
00:09:45,099 --> 00:09:50,130
and you type in, you know, "Google.com"
and you search for something

183
00:09:51,003 --> 00:09:55,007
you are sending a request to a server

184
00:09:55,034 --> 00:09:58,123
in the cloud which - it's not really a
cloud - it's an underground bunker basically

185
00:09:59,023 --> 00:10:00,049
with some servers, but you could

186
00:10:00,049 --> 00:10:03,147
think of it as a nice cloud floating in
the sky -

187
00:10:04,047 --> 00:10:10,071
where a program - a server-side program -
"a server-side program" executes

188
00:10:10,071 --> 00:10:14,139
and returns information back to you so
you can see the result

189
00:10:15,039 --> 00:10:19,042
in the browser. This is different

190
00:10:19,042 --> 00:10:23,044
then, perhaps, there being an animation in
the browser that's running

191
00:10:23,062 --> 00:10:27,110
that you click on and when you click on
it it makes little pretty fireworks. That

192
00:10:28,001 --> 00:10:30,056
might be something written in JavaScript

193
00:10:30,065 --> 00:10:34,094
that is executing on the client side, this
animation that's running locally on your

194
00:10:34,094 --> 00:10:34,165
computer

195
00:10:35,065 --> 00:10:38,152
and reading your mouse clicks. The server
side programming is this thing that

196
00:10:39,052 --> 00:10:42,074
happens when you have to request the
program runs it says you data back.

197
00:10:42,074 --> 00:10:46,137
Perhaps that's written in Python. Now
there are lots of different languages. In

198
00:10:47,037 --> 00:10:48,068
some languages you can write,

199
00:10:48,068 --> 00:10:51,146
you know, in JavaScript you can write
client-side programs, and in Javascript you can

200
00:10:52,046 --> 00:10:54,055
write server-side programs something
called Node.js - it's not

201
00:10:55,036 --> 00:10:58,124
language-specific, but conceptually
there's a different thing going on here.

202
00:10:59,024 --> 00:11:03,036
Are you writing a program that is executing
locally on your laptop? You know, here on

203
00:11:03,036 --> 00:11:07,129
my prop here there's a
program running on this laptop. It is drawing

204
00:11:08,029 --> 00:11:09,068
pixels to the screen.

205
00:11:09,068 --> 00:11:13,073
That is a client-side program. There's a
program running somewhere else on a

206
00:11:13,073 --> 00:11:13,152
server

207
00:11:14,052 --> 00:11:18,103
that is sending me information
back about how excellent my jog was

208
00:11:19,003 --> 00:11:20,066
this morning or whatever from the

209
00:11:20,066 --> 00:11:23,115
RunKeeper website or whatever but (I
guess I just plugged RunKeeper. I like

210
00:11:24,015 --> 00:11:24,042
it)

211
00:11:24,042 --> 00:11:28,071
That's a server-side program. So this is
an important consideration when you're

212
00:11:28,071 --> 00:11:29,135
learning programming languages

213
00:11:30,035 --> 00:11:33,093
and you're creating applications with
them, and this is something you want

214
00:11:33,093 --> 00:11:35,097
familiarity with, both client-side and
server-side.

215
00:11:36,033 --> 00:11:41,045
This video series that I'm doing, while we
will refer to and demonstrate some

216
00:11:41,045 --> 00:11:41,143
examples that

217
00:11:42,043 --> 00:11:46,046
involve server-side programming later, on is
really focused on

218
00:11:46,046 --> 00:11:49,089
client-side programs. We're going to be
writing

219
00:11:49,089 --> 00:11:52,105
applications that open a window on your
computer screen

220
00:11:53,005 --> 00:11:56,103
draw pixels, draw text, draw things to
that window,

221
00:11:57,003 --> 00:12:00,099
and that you can interact with on your
laptop, so were really learning

222
00:12:00,099 --> 00:12:03,145
client-side, which I think is an
important thing to note.

223
00:12:04,045 --> 00:12:07,064
And this brings up kinda where with

224
00:12:07,064 --> 00:12:10,065
we're kinda finishing off here so

225
00:12:10,065 --> 00:12:12,066
if you want to do stuff for the web,

226
00:12:12,066 --> 00:12:16,085
there are a lot of fantastic resources
out there for you to learn

227
00:12:16,085 --> 00:12:19,444
web programming. JavaScript is a
terrific

228
00:12:20,209 --> 00:12:23,430
programming language to learn has lots of
applications

229
00:12:23,043 --> 00:12:28,252
Python is another fantastic language
to learn as a beginner,

230
00:12:28,639 --> 00:12:32,860
but we're going to use something called
Processing, and I'm going to writet

231
00:12:32,086 --> 00:12:36,100
"Processing" right here

232
00:12:37,000 --> 00:12:40,001
and I'm going to draw up like a weird
little arrow there

233
00:12:40,001 --> 00:12:43,058
that is pointing back to Java. So what is
Processing?

234
00:12:43,067 --> 00:12:46,141
Processing (I really should be able to say it)

235
00:12:47,041 --> 00:12:50,106
Processing was developed - was created - in 2001

236
00:12:51,006 --> 00:12:56,030
by Casey Reas and Benjamin Fry while they were
students at the MIT Len a multimedia lab

237
00:12:56,003 --> 00:12:56,010
under John Maeda

238
00:12:57,000 --> 00:13:00,061
so what Processing really started as
was, "Hey,

239
00:13:00,061 --> 00:13:03,125
we need something to make these projects
we're making.

240
00:13:04,025 --> 00:13:08,028
Let's make something." So
processing is this

241
00:13:08,055 --> 00:13:11,134
really nice simple environment.

242
00:13:11,629 --> 00:13:14,990
You can download it. It's kind of all-in-one. You
can open it.

243
00:13:14,099 --> 00:13:18,498
You can type some code. You can run it.
It works. So I'm gonna get to that in a

244
00:13:19,389 --> 00:13:19,465
second -

245
00:13:20,149 --> 00:13:24,100
more about why we're
using Processing, but let's just think - you've

246
00:13:24,001 --> 00:13:25,600
probably heard the term

247
00:13:25,699 --> 00:13:28,704
"Creative Coding." The

248
00:13:29,199 --> 00:13:33,250
term "Creative Coding" starting as a
kind of catch-all phrase

249
00:13:33,709 --> 00:13:36,772
for people making creative applications
with code,

250
00:13:37,339 --> 00:13:40,540
trying to make Art, trying to make
installations, trying to make weird

251
00:13:40,054 --> 00:13:42,079
obscure impractical crazy ideas,

252
00:13:42,079 --> 00:13:45,878
and you know there's a lot of
discussion now, "Is this a good term? Is

253
00:13:46,589 --> 00:13:48,310
this a bad term?"

254
00:13:48,031 --> 00:13:51,123
One thing I think I heard from
Jer Thorp was you could think of it as

255
00:13:52,023 --> 00:13:55,048
"creative writing" - the process of
writing for -

256
00:13:55,048 --> 00:13:58,827
the process writing code for
creative applications. There is also now

257
00:13:59,259 --> 00:14:02,360
the term "Poetic Computation," which
i think is interesting.

258
00:14:02,036 --> 00:14:05,054
But anyway, there are lots of
environments

259
00:14:05,054 --> 00:14:08,068
and I'll draw a line here - you might
have heard something called

260
00:14:08,068 --> 00:14:12,073
"Open Frameworks." You might have heard
of something called "Cinder."

261
00:14:12,073 --> 00:14:15,154
These are creative coding
environments.

262
00:14:16,054 --> 00:14:19,072
These are libraries - frameworks -

263
00:14:19,072 --> 00:14:21,108
for writing code, and your

264
00:14:22,008 --> 00:14:25,089
code, though, is really C++.

265
00:14:25,089 --> 00:14:29,142
C++, even with all of its advantages in terms
of having low-level access to the

266
00:14:30,042 --> 00:14:30,050
machine

267
00:14:31,022 --> 00:14:35,024
is a very hard language to get started in
right from the beginning.

268
00:14:35,042 --> 00:14:39,088
You have to a have to manage that
memory. There's lots of stuff you have to

269
00:14:39,088 --> 00:14:40,134
learn about,

270
00:14:41,034 --> 00:14:44,075
like these things called "pointers."
There's --

271
00:14:44,075 --> 00:14:48,077
you've got to - using these environments
in addition to writing C++ you've got

272
00:14:48,077 --> 00:14:48,134
to use

273
00:14:49,034 --> 00:14:52,131
on the Mac something called Xcode - the
development environments which are

274
00:14:53,031 --> 00:14:56,059
larger and more complex, so - I want to use
in this

275
00:14:56,059 --> 00:14:59,098
video series something that's a bit
simpler that we can help get started

276
00:14:59,098 --> 00:14:59,136
with a

277
00:15:00,036 --> 00:15:04,105
a bit more quickly. But these are
terrific environments with a lot a

278
00:15:05,005 --> 00:15:09,098
similar qualities to Processing. The
other thing you might have heard of

279
00:15:09,098 --> 00:15:10,181
which I think is important to mention

280
00:15:11,081 --> 00:15:14,138
is something called max "Max/MSP/Jitter"

281
00:15:15,038 --> 00:15:18,060
(I don't like how I wrote this here)

282
00:15:18,006 --> 00:15:21,032
I'm going to put this over here
somewhere:

283
00:15:21,086 --> 00:15:24,087
Max/MSP/Jitter

284
00:15:24,087 --> 00:15:27,110
and there's also something called PD
or "Pure Data."

285
00:15:28,001 --> 00:15:31,001
these are known as dataflow

286
00:15:31,001 --> 00:15:35,053
programming environments, and the interesting
thing about dataflow programming

287
00:15:35,062 --> 00:15:36,080
environments is you

288
00:15:36,008 --> 00:15:39,017
actually are writing your code at text.
you're essentially

289
00:15:40,007 --> 00:15:43,051
designing a flow chart for how your
program should run.

290
00:15:44,014 --> 00:15:47,102
You're putting a box on the screen and
than giving that box some

291
00:15:48,002 --> 00:15:51,085
inputs and then connecting some data to those
inputs and then the box may have an

292
00:15:51,085 --> 00:15:54,090
output which goes to another box (and it
looks like an interesting little

293
00:15:55,035 --> 00:15:58,081
alien there) - So this is actually really
fantastic and

294
00:15:58,081 --> 00:16:01,094
for many people - many people
find

295
00:16:01,094 --> 00:16:05,149
this way of programming more intuitive
and easier to do. It's certainly works

296
00:16:06,049 --> 00:16:10,049
wonderfully for audio applications because
if you think about How an audio app -

297
00:16:10,049 --> 00:16:13,121
if you build audio system physically you
have a bunch of

298
00:16:14,021 --> 00:16:17,058
mixers and instruments and cables and
things have input and output

299
00:16:17,058 --> 00:16:21,077
go through stuff it eventually make it
to a speaker that comes out. So this idea

300
00:16:21,077 --> 00:16:23,164
of writing an audio application with the
dataflow programming environment

301
00:16:24,064 --> 00:16:28,076
is a - and you can certainly do graphics
applications and many other things.

302
00:16:28,076 --> 00:16:31,083
I would encourage you to look at
Max/MSP and PD. So

303
00:16:32,046 --> 00:16:36,059
there is huge world of stuff and you
could spend your life

304
00:16:36,059 --> 00:16:39,114
learning every programming language. You could
also spend your life worrying about

305
00:16:40,014 --> 00:16:43,073
"OMG which one should I use?" So I'm
gonna say

306
00:16:43,073 --> 00:16:46,124
to you right now, "Stop worrying."
If you feel like

307
00:16:47,024 --> 00:16:51,078
you don't like the way this video series is going

308
00:16:51,078 --> 00:16:54,117
then go to another resource online and
learn a different

309
00:16:55,017 --> 00:16:58,109
programming language. But what I will -
What we're going to use is Processing.

310
00:16:59,009 --> 00:17:02,090
And I'm going to very briefly now show
you kind of the core

311
00:17:02,009 --> 00:17:05,018
basic reason -

312
00:17:05,099 --> 00:17:08,113
one pf the core reasons why Processing is
gonna work well here

313
00:17:09,013 --> 00:17:12,060
for learning to program. And so let me
walk over here

314
00:17:12,006 --> 00:17:15,014
and I'm going to switch over to the desktop -

315
00:17:15,068 --> 00:17:18,130
Processing is just an application. I've
downloaded it.

316
00:17:19,003 --> 00:17:23,003
It is already sitting here on the machine.
Where do you download it? I guess I

317
00:17:23,003 --> 00:17:23,096
might as well

318
00:17:24,023 --> 00:17:27,025
show you this right now. If you go to
Processing.org

319
00:17:27,025 --> 00:17:30,122
you can actually click here to
download Processing. I guess I'll mention that

320
00:17:31,022 --> 00:17:33,044
Processing is a non-profit foundation.

321
00:17:33,044 --> 00:17:36,125
You can make a donation when you
download, and that donation is tax-deductible

322
00:17:37,025 --> 00:17:40,033
but it is available for free. You are not
required by any means to donate and I

323
00:17:41,005 --> 00:17:43,073
would imagine maybe when you're just
first trying it out you wanna see if you

324
00:17:43,073 --> 00:17:43,156
like it first.

325
00:17:44,056 --> 00:17:48,074
But the other thing I should mention
here is all these Creative Doding

326
00:17:48,074 --> 00:17:48,172
environments,

327
00:17:49,072 --> 00:17:53,087
Open Frameworks, Cinder, Processing, these
environments

328
00:17:53,087 --> 00:17:56,088
live in this rich landscape of "Open Source."

329
00:17:56,097 --> 00:18:00,110
So what does this mean for it to be
"Open Source?" It means not only

330
00:18:01,001 --> 00:18:05,028
can you get - are you getting this
software these things are

331
00:18:05,037 --> 00:18:06,064
available to you for free (although

332
00:18:06,064 --> 00:18:09,113
Open Source doesn't have to be free)
[but it also means]

333
00:18:10,013 --> 00:18:14,099
that the source code how - these
things are written, right? - these are libraries

334
00:18:14,099 --> 00:18:17,168
that are applications - you can actually go and
read the source code, contribute to them,

335
00:18:18,068 --> 00:18:22,091
it is all completely open to you and all
this stuff is available in something

336
00:18:22,091 --> 00:18:22,133
called

337
00:18:23,033 --> 00:18:25,058
GitHub which is a

338
00:18:25,058 --> 00:18:28,101
website, essentially, for sharing open source
projects. But i digress.

339
00:18:29,001 --> 00:18:32,090
This is where you can get Processing and
download it. Once you have it on your

340
00:18:32,009 --> 00:18:32,081
machine

341
00:18:33,062 --> 00:18:36,087
you can run the application and you can
see here

342
00:18:36,087 --> 00:18:39,175
when you run it you're going to get
this window like this

343
00:18:40,075 --> 00:18:44,103
and if I zoom in all the way here we can
see there's this nice little button

344
00:18:45,003 --> 00:18:45,096
called "Run."

345
00:18:45,096 --> 00:18:49,122
And if I were to actually just run - press
"Run" right there

346
00:18:50,022 --> 00:18:53,063
we get this little window and look! Here
it is!

347
00:18:53,063 --> 00:18:56,065
Our very first computer program we've
ever written!

348
00:18:56,065 --> 00:19:00,112
There it is running. It opened this window, and
look at the code! It's amazing! It's like

349
00:19:01,012 --> 00:19:01,056
"The

350
00:19:01,056 --> 00:19:04,072
Emperor's New Code" or whatever. There's nothing
there.

351
00:19:04,072 --> 00:19:08,120
Obviously the next steps were gonna get
to in the future videos - we're

352
00:19:09,002 --> 00:19:12,035
still in this sort of introductory place - but
you can just skip right ahead -

353
00:19:12,053 --> 00:19:15,132
is, "What do we write there?
What do we write there, and what is it that

354
00:19:16,032 --> 00:19:16,096
happens?"

355
00:19:16,096 --> 00:19:19,121
and - but - um -

356
00:19:20,021 --> 00:19:23,113
but I'll just write one line
of code just to

357
00:19:24,013 --> 00:19:27,040
demonstrate this - and this is what -

358
00:19:27,004 --> 00:19:31,047
one of the nice things about using Processing
is we were able to just

359
00:19:31,083 --> 00:19:36,096
write our code really simply in this
interface, run it, and we get our window

360
00:19:36,096 --> 00:19:39,180
and everything just kinda a works really
we can kind of get up and running with

361
00:19:40,008 --> 00:19:41,033
that really quickly.

362
00:19:42,005 --> 00:19:47,011
Okay so there's so much more to say
about Processing and why we're using it

363
00:19:47,065 --> 00:19:47,129
I guess

364
00:19:48,029 --> 00:19:51,031
um -

365
00:19:51,031 --> 00:19:55,108
but I think this video has gone on
for quite a bit of time. I've kind of rambled through

366
00:19:56,008 --> 00:19:57,087
a lot of things - so we're going to -

367
00:19:57,087 --> 00:20:00,176
We're going to get to a bit more about
Processing, the reference,

368
00:20:01,076 --> 00:20:04,132
how it is that you really learning Java
while you are writing Processing - I think we'll

369
00:20:05,032 --> 00:20:05,129
get to that as we

370
00:20:06,029 --> 00:20:09,056
as we as we start learning in some of
the future videos.

371
00:20:09,056 --> 00:20:13,094
Okay, the next thing I think I'm
actually going to continue this thread

372
00:20:13,094 --> 00:20:16,126
by showing you a kind of range of projects
and things that are made

373
00:20:17,026 --> 00:20:20,028
with Processing and Computational Media

374
00:20:20,028 --> 00:20:23,092
that might help you start to think about
the kinds of projects you might make

375
00:20:23,092 --> 00:20:24,148
a while following along

376
00:20:25,048 --> 00:20:25,627
these videos

